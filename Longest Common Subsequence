class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int[][] dp = new int[text1.length()][text2.length()];
        for (int[] arr : dp){
            Arrays.fill(arr, -1);
        }

        return lic(text1, 0, text2, 0, dp);
    }

    private static int lic(String s1, int i, String s2, int j, int[][] dp){
        if (i == s1.length() || j == s2.length()){
            return 0;
        }

        if (dp[i][j] != -1){
            return dp[i][j];
        }

        int ans = 0;
        if (s1.charAt(i) == s2.charAt(j)){
            ans = lic(s1, i+1, s2, j+1, dp) + 1;
        } else{
            ans = Math.max(lic(s1, i+1, s2, j, dp), lic(s1, i, s2, j+1, dp));
        }

        return dp[i][j] = ans;
    }
}
